C51 COMPILER V9.56.0.0   MODBUS                                                            03/16/2018 15:24:34 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MODBUS
OBJECT MODULE PLACED IN .\Objects\MODBUS.obj
COMPILER INVOKED BY: D:\SoftWare\Keil\C51\BIN\C51.EXE MODBUS.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\MODBUS.lst) OBJECT(.\Objects\MODBUS.obj)

line level    source

   1          #include <MODBUS.H>
   2          #include <STC15F2K60S2.H>
   3          
   4          
   5          uchar code modbus_CRCH[]=  
   6          {  
   7          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,  
   8          0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,  
   9          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01,  
  10          0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,  
  11          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81,  
  12          0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,  
  13          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01,  
  14          0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,  
  15          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,  
  16          0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,  
  17          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01,  
  18          0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,  
  19          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,  
  20          0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,  
  21          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01,  
  22          0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,  
  23          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,  
  24          0x40  
  25          };  
  26            
  27          uchar code modbus_CRCL[] =  
  28          {  
  29          0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 0x07, 0xC7, 0x05, 0xC5, 0xC4,  
  30          0x04, 0xCC, 0x0C, 0x0D, 0xCD, 0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,  
  31          0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A, 0x1E, 0xDE, 0xDF, 0x1F, 0xDD,  
  32          0x1D, 0x1C, 0xDC, 0x14, 0xD4, 0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,  
  33          0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 0xF2, 0x32, 0x36, 0xF6, 0xF7,  
  34          0x37, 0xF5, 0x35, 0x34, 0xF4, 0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,  
  35          0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29, 0xEB, 0x2B, 0x2A, 0xEA, 0xEE,  
  36          0x2E, 0x2F, 0xEF, 0x2D, 0xED, 0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,  
  37          0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 0x61, 0xA1, 0x63, 0xA3, 0xA2,  
  38          0x62, 0x66, 0xA6, 0xA7, 0x67, 0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,  
  39          0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68, 0x78, 0xB8, 0xB9, 0x79, 0xBB,  
  40          0x7B, 0x7A, 0xBA, 0xBE, 0x7E, 0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,  
  41          0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 0x70, 0xB0, 0x50, 0x90, 0x91,  
  42          0x51, 0x93, 0x53, 0x52, 0x92, 0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,  
  43          0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B, 0x99, 0x59, 0x58, 0x98, 0x88,  
  44          0x48, 0x49, 0x89, 0x4B, 0x8B, 0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,  
  45          0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 0x43, 0x83, 0x41, 0x81, 0x80,  
  46          0x40  
  47          };  
  48          
  49          TYPE_CRC modbusCRC16(uchar *updata,uint len)  
  50          {  
  51   1              TYPE_CRC DataCRC;
  52   1              uchar uchCRCHi=0xff;  
  53   1              uchar uchCRCLo=0xff;  
  54   1              uint  uindex;  
C51 COMPILER V9.56.0.0   MODBUS                                                            03/16/2018 15:24:34 PAGE 2   

  55   1              while(len--)  
  56   1              {  
  57   2                uindex = uchCRCHi ^ *updata++;  
  58   2                uchCRCHi = uchCRCLo ^ modbus_CRCH[uindex];  
  59   2                uchCRCLo = modbus_CRCL[uindex];  
  60   2              }  
  61   1          
  62   1              DataCRC.High = uchCRCHi;
  63   1              DataCRC.Low  = uchCRCLo;
  64   1              return DataCRC;  
  65   1      }  
  66          
  67          char * MakeModbus(uchar addr, uchar com, int reg_addr, int len)
  68          {
  69   1              char xdata return_buf[10];
  70   1              TYPE_CRC crc ;
  71   1              
  72   1              return_buf[0] = addr;
  73   1              return_buf[1] = com;
  74   1              return_buf[2] = reg_addr >> 8;
  75   1              return_buf[3] = reg_addr;
  76   1              return_buf[4] = len >> 8;
  77   1              return_buf[5] = len;
  78   1              
  79   1              crc = modbusCRC16(return_buf,6);
  80   1              
  81   1              
  82   1              return_buf[6] = crc.High;
  83   1              return_buf[7] = crc.Low;
  84   1              
  85   1              return return_buf;
  86   1      }
  87          
  88          TYPE_MODBUS ModbusParsing(uchar *buf)
  89          {
  90   1              
  91   1              static uchar xdata out_put[150];
  92   1      //      int i;
  93   1              int count = 0;
  94   1      //      uchar len;
  95   1              TYPE_MODBUS modbus;
  96   1              TYPE_CRC crc;
  97   1      
  98   1              modbus.len = buf[2];
  99   1                      
 100   1              for(count = 0;count <= modbus.len;count++)
 101   1                      out_put[count] = 0;
 102   1      
 103   1              for(count = 0;count<modbus.len;count++)
 104   1              {
 105   2                      out_put[count] = buf[count + 3];
 106   2              }
 107   1              modbus.dat = &out_put[0];
 108   1              
 109   1              crc = modbusCRC16(buf,modbus.len + 3);
 110   1      
 111   1              for(count = 0;count <= modbus.len;count++)
 112   1                      buf[count] = 0;
 113   1      
 114   1              if((crc.High == buf[modbus.len + 4]) && (crc.Low == buf[modbus.len + 5]))
 115   1              {
 116   2                      P62 = !P62;
C51 COMPILER V9.56.0.0   MODBUS                                                            03/16/2018 15:24:34 PAGE 3   

 117   2                      modbus.error = 0;
 118   2                      return modbus;
 119   2              }
 120   1              else
 121   1              {
 122   2                      modbus.error = 1;
 123   2                      return modbus;
 124   2              }
 125   1      }
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          
 141          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =    512    ----
   XDATA SIZE       =    150      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
